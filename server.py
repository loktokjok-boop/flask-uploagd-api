from flask import Flask, request, jsonify, send_from_directory
from datetime import datetime, time
from zoneinfo import ZoneInfo
import os, json, uuid

app = Flask(__name__)

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
SAVE_FOLDER = "received_json"   # –ü–∞–ø–∫–∞, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è JSON
os.makedirs(SAVE_FOLDER, exist_ok=True)

# –°–ø–∏—Å–æ–∫ –≤–∞–ª–∏–¥–Ω—ã—Ö –∫–æ–¥–æ–≤
VALID = {
    "ABC123": {"type": "user1"},
    "XYZ789": {"type": "user2"}
}

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ ===
def save_record(rec):
    fname = f"scan_{datetime.now(ZoneInfo('Asia/Yerevan')).strftime('%Y%m%d_%H%M%S')}_{uuid.uuid4().hex[:6]}.json"
    path = os.path.join(SAVE_FOLDER, fname)
    with open(path, "w", encoding="utf-8") as f:
        json.dump(rec, f, ensure_ascii=False, indent=2)
    print(f"Saved JSON file: {path}")
    return fname


# === –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç ===
@app.route("/upload", methods=["GET", "POST"])
def upload():
    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ï—Ä–µ–≤–∞–Ω–∞
    erevan_now = datetime.now(ZoneInfo("Asia/Yerevan"))

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ POST (—á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ API) ---
    if request.method == "POST":
        if not request.is_json:
            return jsonify({"status": "error", "msg": "expected JSON"}), 400

        payload = request.get_json()
        print("Received JSON:", payload)

        code = (payload.get("id") or "").strip()
        user_type = payload.get("type", "unknown")
        device = payload.get("device", "unknown")
        time_sent = payload.get("time") or erevan_now.isoformat()

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
        if user_type == "unknown" and code in VALID:
            user_type = VALID[code]["type"]

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ GET (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ QR) ---
    else:
        code = (request.args.get("id") or "").strip()
        user_type = VALID[code]["type"] if code in VALID else "unknown"
        device = "qr"
        time_sent = erevan_now.isoformat()

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ ---
    on_time = erevan_now.time() <= time(8, 20)

    # --- –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å ---
    record = {
        "code": code,
        "user_type": user_type,
        "device": device,
        "time_sent": time_sent,
        "received_at": erevan_now.isoformat(),
        "on_time": on_time
    }

    # --- –°–æ—Ö—Ä–∞–Ω—è–µ–º ---
    filename = save_record(record)

    # --- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å ---
    if code in VALID:
        name = VALID[code]["type"]
        msg = "–ü—Ä–æ–π–¥–µ–Ω–æ –≤–æ–≤—Ä–µ–º—è ‚úÖ" if on_time else "–û–ø–æ–∑–¥–∞–Ω–∏–µ ‚ùå"
        allowed = on_time
    else:
        name = None
        msg = "–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå"
        allowed = False

    # --- –û—Ç–≤–µ—Ç –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞ (GET) ---
    if request.method == "GET":
        return f"""
        <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ QR</h2>
        <p>–ö–æ–¥: {record['code'] or '‚Äî'}</p>
        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {record['user_type']}</p>
        <p>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {record['device']}</p>
        <p>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {record['time_sent']}</p>
        <p>–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è (–ï—Ä–µ–≤–∞–Ω): {record['received_at']}</p>
        <p>–°—Ç–∞—Ç—É—Å: {"–ü—Ä–æ–π–¥–µ–Ω–æ –≤–æ–≤—Ä–µ–º—è ‚úÖ" if record['on_time'] else "–û–ø–æ–∑–¥–∞–Ω–∏–µ ‚ùå"}</p>
        <p><a href="/files/{filename}" target="_blank">üìÑ –°–∫–∞—á–∞—Ç—å JSON</a></p>
        """, 200

    # --- –û—Ç–≤–µ—Ç –¥–ª—è API (POST) ---
    return jsonify({
        "status": "ok" if name else "error",
        "allowed": allowed,
        "msg": msg,
        "name": name,
        "file": f"/files/{filename}"
    }), 200


# === –û—Ç–¥–∞—á–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ ===
@app.route("/files/<filename>")
def get_file(filename):
    return send_from_directory(SAVE_FOLDER, filename)


# === –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏) ===
@app.route("/files", methods=["GET"])
def list_files():
    files = os.listdir(SAVE_FOLDER)
    return jsonify({"files": files})


# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port, debug=True)
